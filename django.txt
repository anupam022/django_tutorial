What is Django ?

Django is  Python web development framework. 
"Batteries included" ==> Offers built-in solutions and features for basically all problems.
It's customizable and flexible. 
It is used for building real websites.

Command to create project in Django
-- django-admin startproject projectname

To run django project
 -- python manage.py runserver

To create an APP in django project 
    -- python manage.py startapp appname

What are "Urls" (or "Routes") & "Views" ?
    -- google.com/ -->url (uniform resource locator), google.com/images
    --Url - Action mappings which ensure that certain results are "achieved"
    when certain Urls are entered by the user.
Views --> The logic is executed for different URLs (Http Method),
Code that handle  request and return responses.
Views are responsible for processing requests (parsing the URLs
Http Method and potential request data) and creating a response.

Reverse Function:The reverse() function in Django is a utility function used for URL reversing. \
It allows you to dynamically generate URLs based on the name of a URL pattern defined in 
your urls.py files, 
rather than hardcoding the URL paths directly. This promotes the "Don't Repeat Yourself" 
(DRY) principle and makes your application more maintainable and robust. 

To apply html file in django we need to create folder templates in app file
which is here challenges and in that templates folder create subfolder as challenges
and then create html file with app name 
To use the html file in views i will import 
--from django.template.loader import render_to_string 
response_data = render_to_string("challenges/challenge.html")

render_to_string ==> it will convert something to string

DTL Django Template Language ==> Enhanced HTML file to create dynamic pages
Standard HTML syntax and Special DTL syntax ==> Dynamic HTML response

 {{}} ==>Interpolation syntax This is to inject a dynamic content in this place , placeholder

 filters ==> django template template website has multiple filters through which we can 
 use and enhance our html file  For eg. {{month | title}} this will highlight the title 

 for tag syntax ==> {%for month in months%}
                    {%endfor%}

url tag is equivalent to reverse function  => to fetch the path and links
{% url "month-challenge" month %}

if tage==> {%if text is not None%}
           {% elif text == 0%}
           {%else%}
           {%endif%}

Template Inheritance ==>
Template inheritance in Django is a powerful feature that promotes code reusability 
and maintainability in web applications. It allows the creation of a base "skeleton"
template that contains common elements shared across multiple pages, such as headers,
footers, navigation bars, and overall layout. Child templates can then extend this
base template and override or add content to specific sections.     

Block tag ==>
The block tag is a placeholder that will be replaced by a block in a child 
template with the same name. In child templates the block tag is content.
{% block page_title %}My Challenges{% endblock  %}
{% extends "layout.html" %}

include tag==> this will help to navigation to header sections
{% include "challenges/includes/header.html" %}

load plugin ==> It is used to load static file and CSS